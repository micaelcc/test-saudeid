version: "3"

services:
  api-gateway:
    build: ./services/api-gateway/
    ports:
      - "3000:3000"
    depends_on:
      - manager-ms
      - api-gateway-database
    networks:
      - test-saudeid-network

  api-gateway-database:
    image: "postgres"
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=api-gateway-db
      - POSTGRES_USER=api-gateway-db-user
      - POSTGRES_PASSWORD=api-gateway-db-pass
    networks:
      - test-saudeid-network

  manager-ms:
    build: ./services/manager
    depends_on:
      - kafka
      - redis
    networks:
      - test-saudeid-network

  zookeeper:
    image: "docker.io/bitnami/zookeeper:3-debian-10"
    ports:
      - 2181:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - test-saudeid-network

  kafka:
    image: "docker.io/bitnami/kafka:2-debian-10"
    ports:
      - 9092:9092
      - 9093:9093
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://kafka:9093
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
    networks:
      - test-saudeid-network

  stock-ms:
    build: ./services/stock
    depends_on:
      - kafka
      - redis
    networks:
      - test-saudeid-network

  redis:
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"
    networks:
      - test-saudeid-network

  mongo:
    container_name: mongo-container
    image: mongo:3
    restart: always
    environment:
      - MONGO_INITDB_DATABASE=stock-db
    ports:
      - "27017:27017"
    networks:
      - test-saudeid-network

networks:
  test-saudeid-network:
    driver: bridge
